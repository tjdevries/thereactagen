(executable
 (package reactagen)
 (public_name reactagen)
 (name main)
 (modules main)
 (libraries
  reactagen
  models
  views
  based
  twitch
  auth
  dream
  dream-livereload
  dotenv
  tyxml
  fmt
  caqti-driver-sqlite3)
 (preprocess
  (pps ppx_let lwt_ppx)))

(executable
 (package component_library_playground)
 (public_name component_library_playground)
 (name component_library_playground)
 (modules component_library_playground)
 (libraries components dream dream-livereload tyxml fmt))

(executable
 (package twitch)
 (public_name twitcher)
 (name twitcher)
 (modules twitcher)
 (libraries
  twitch
  models
  views
  based
  auth
  dream
  dream-livereload
  tyxml
  fmt
  lwt
  cohttp-lwt-unix
  caqti-driver-sqlite3)
 (preprocess
  (pps ppx_let lwt_ppx ppx_deriving_yojson ppx_deriving.show)))

(rule
 (alias tailwind)
 (deps
  (:in ../../tailwind.css)
  (:config ../../tailwind.config.js)
  (glob_files ../../lib/components/*.ml))
 (targets output.css)
 (action
  (run
   ../vendor/tailwind-cli/tailwindcss-macos-arm64
   -c
   %{config}
   -i
   %{in}
   -o
   ./output.css))
 (mode
  (promote
   (until-clean)
   (into ../static)))
 (enabled_if
  (and
   (= %{system} macosx)
   (= %{architecture} arm64))))

; (rule
;  (alias tailwind)
;  (deps
;   (:in ./tailwind.css)
;   (:config ./tailwind.config.js))
;  (targets output.css)
;  (action
;   (run
;    ./vendor/tailwind-cli/tailwindcss-linux-arm64
;    -c
;    %{config}
;    -i
;    %{in}
;    -o
;    ./output.css))
;  (mode
;   (promote
;    (until-clean)
;    (into ./static)))
;  (enabled_if
;   (and
;    (= %{system} linux)
;    (= %{architecture} arm64))))
;
; (rule
;  (alias tailwind)
;  (deps
;   (:in ./tailwind.css)
;   (:config ./tailwind.config.js))
;  (targets output.css)
;  (action
;   (run
;    ./vendor/tailwind-cli/tailwindcss-macos-x64
;    -c
;    %{config}
;    -i
;    %{in}
;    -o
;    ./output.css))
;  (mode
;   (promote
;    (until-clean)
;    (into ./static)))
;  (enabled_if
;   (and
;    (= %{system} macosx)
;    (= %{architecture} amd64))))
;
; (rule
;  (alias tailwind)
;  (deps
;   (:in ./tailwind.css)
;   (:config ./tailwind.config.js))
;  (targets output.css)
;  (action
;   (run
;    ./vendor/tailwind-cli/tailwindcss-linux-x64
;    -c
;    %{config}
;    -i
;    %{in}
;    -o
;    ./output.css))
;  (mode
;   (promote
;    (until-clean)
;    (into ./static)))
;  (enabled_if
;   (and
;    (= %{system} linux)
;    (= %{architecture} amd64))))

; (rule
;  (deps ../output.css)
;  (targets reload_tailwind.ml)
;  (action
;   (with-stdout-to
;    reload_tailwind.ml
;    (system "printf \"let _ = %c%s%c\" '\"' \"$(date)\" '\"' "))))
